{"version":3,"sources":["parse/parse.ts","socket-io/socket-io.ts","components/routes/LoggedInOnly.tsx","components/routes/LoggedOutOnly.tsx","components/routes/UnverifiedOnly.tsx","redux/actions.tsx","components/utils/AvalonScrollbars.tsx","components/utils/Button.tsx","components/utils/Input.tsx","redux/reducers.tsx","redux/store.tsx","components/auth/login.tsx","pages/Login.tsx","components/auth/signup.tsx","pages/Signup.tsx","components/auth/logout.tsx","pages/Navbar.tsx","pages/Verify.tsx","pages/Lobby/Announcements.tsx","pages/Lobby/NewAvatars.tsx","pages/Lobby/PlayerList.tsx","pages/Lobby/Chat.tsx","components/utils/Slider.tsx","components/utils/ListInput.tsx","pages/Lobby/GameForm.tsx","pages/Lobby/GameList.tsx","pages/Lobby.tsx","pages/Profile.tsx","pages/Game/Notes.tsx","pages/Game/VoteHistory.tsx","pages/Game/Tabs.tsx","pages/Lobby/GameInfo.tsx","pages/Game/StatusBar.tsx","pages/Game/AvatarUI.tsx","pages/Game/Table.tsx","pages/Game.tsx","pages/NoMatch.tsx","App.tsx","index.tsx"],"names":["Parse","initialize","serverURL","ws","socketIO","LoggedInOnly","Component","component","authenticated","verified","rest","render","props","to","pathname","state","from","location","LoggedOutOnly","UnverifiedOnly","setOnline","value","type","AvalonScrollbars","scrollbars","createRef","top","threshold","autoScroll","bind","getScrollBottom","window","addEventListener","this","setThreshold","removeEventListener","innerWidth","ref","current","getValues","e","console","log","scrollToBottom","autoHide","autoHideTimeout","autoHideDuration","onScroll","renderTrackHorizontal","className","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderView","children","Button","onClick","text","library","add","faHome","faLock","faUser","faEnvelope","faPaperPlane","Input","icon","name","placeholder","onChange","required","ChatInput","rootReducer","combineReducers","notes","action","username","online","store","createStore","password","onerror","a","User","logIn","Cloud","run","dispatch","message","Login","error","handleUsernameChange","handlePasswordChange","handleSubmit","event","setState","target","preventDefault","login","err","id","autoComplete","onSubmit","undefined","email","user","set","signUp","Signup","handleEmailChange","signup","logOut","then","Navbar","points","showSidebar","setClipPath","toggleSidebar","handleLogout","inner","document","getElementById","outer","clientHeight","clientWidth","logout","style","clipPath","faCog","faSignOutAlt","faList","transform","connect","Verify","initialHeight","innerHeight","minHeight","Announcement","date","Announcements","Avatar","backgroundImage","url","NewAvatars","Player","PlayerTab","showTab","toggleTab","title","players","length","map","p","i","key","PlayerList","areAdmins","areContribs","arePlayers","loaded","parseClientsOnline","socket","on","emit","off","data","ChatMessage","messageDate","Date","timestamp","typeClass","characterClass","character","getHours","slice","getMinutes","author","content","Chat","eventNames","messages","toGameChat","startChat","endChat","triggerRequest","parseChat","handleChange","code","prevProps","roomNumber","m","Slider","readOnly","checked","List","show","faCaretDown","objects","GameForm","fabFour","merlin","percival","morgana","assassin","oberon","mordred","card","eightPlayers","ninePlayers","tenPlayers","showPlayerMax","playerMax","roleSettings","redirect","processing","playerRoom","createGameSuccess","sendCreateRequest","sendModifyRequest","createsGame","maxPlayers","roomToModify","onExit","toString","faTimes","faCheck","GameLink","gameStateClass","gameState","results","avatars","host","mode","spectators","parseRoomLink","no","r","GameList","gameIds","showCreate","parseRoomList","reverse","Lobby","Math","max","Profile","player","match","params","Notes","textarea","autoSetHeight","ta","height","scrollHeight","spellCheck","VoteHistory","loading","rowHeight","setRowHeight","SetHeaders","SetPlayers","vhWidth","offsetWidth","old","game","missionLeader","missionVotes","missionTeams","items","push","colSpan","fontSize","votes","concat","v","iv","ip","includes","i_p","Tabs","tab","Tab","selected","routes","useDispatch","roleArr","cardArr","replace","StatusBar","formRef","showForm","formSetup","sitAndStand","startGame","pickTeam","voteForMission","voteForSuccess","shootPlayer","cardPlayer","canSit","picks","team","vote","seat","votesRound","voted","shot","privateKnowledge","carded","showButtonThree","buttonOne","buttonTwo","buttonThree","leader","n","showButtonTwo","showButtonOne","filter","remaining","stage","onPicking","onVoting","onMission","onCarding","onAssassination","cause","ended","started","onWaiting","frozen","inProgress","onFinish","onFreeze","GameInfo","AvatarUI","background","shieldLocation","shieldPosition","shieldShow","shieldScale","avatarInitialPosition","avatarPosition","avatarShow","avatarSize","currentBackground","currentHighlight","g","b","renderPicker","renderButtons","picked","width","handleHighlight","isPickable","color","rgb","left","display","onMouseOver","onMouseLeave","maxHeight","maxWidth","isRes","resUrl","spyUrl","table","countSelected","faStamp","faPen","faPaintBrush","opacity","role","MissionTracker","playerMatrix","rounds","Array","fill","round","count","Table","tableRef","centerRef","seatRef","avatarRef","allTimeouts","right","bot","createSeats","resizeTable","initAvatars","moveAvatars","moveShields","leaveLobby","forEach","t","clearTimeout","callback","knowledge","publicKnowledge","imKilling","imPicking","imCarding","imVoting","l","floor","avatar","rect","getBoundingClientRect","min","setTimeout","rect_b","rect_a","start","topO","rightO","botO","renderAvatar","origin","Game","resizeCount","tabs","scale","mission","parseGame","setTableHeight","flex","NoMatch","initialState","App","dispatchCount","updateState","updateDimensions","disconnect","currentUser","getUsername","exact","path","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.cff0fb5e.chunk.js","sourcesContent":["import Parse from \"parse\";\n\nParse.initialize(\"AVALONIST\");\nParse.serverURL = 'http://localhost:1337/parse'\n\nexport default Parse\n","import socketIO from \"socket.io-client\";\n\nconst end = \"http://127.0.0.1:1337\";\nconst ws = socketIO(end);\n\nexport default ws;\n","// External\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Internal\n\nimport CustomRouteProps from \"./custom-route-props\";\n\n// Declaration\n\nconst LoggedInOnly = ({\n  component: Component,\n  authenticated,\n  verified,\n  ...rest\n}: CustomRouteProps) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated ? (\n          verified ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{ pathname: \"/verify\", state: { from: props.location } }}\n            />\n          )\n        ) : (\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n};\n\nexport default LoggedInOnly;\n","// External\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Internal\n\nimport CustomRouteProps from \"./custom-route-props\";\n\n// Declaration\n\nconst LoggedOutOnly = ({\n  component: Component,\n  authenticated,\n  verified,\n  ...rest\n}: CustomRouteProps) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !authenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/lobby\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default LoggedOutOnly;\n","// External\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// Internal\n\nimport CustomRouteProps from \"./custom-route-props\";\n\n// Declaration\n\nconst UnverifiedOnly = ({\n  component: Component,\n  authenticated,\n  verified,\n  ...rest\n}: CustomRouteProps) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated ? (\n          !verified ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{ pathname: \"/lobby\", state: { from: props.location } }}\n            />\n          )\n        ) : (\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n};\n\nexport default UnverifiedOnly;\n","// Types\n\nexport const ADD_NOTES = \"ADD_NOTES\";\nexport const SET_USERNAME = \"SET_USERNAME\";\nexport const SET_ONLINE = \"SET_ONLINE\";\n\ninterface AddNotesAction {\n  type: typeof ADD_NOTES;\n  text: string;\n}\n\ninterface SetUsernameAction {\n  type: typeof SET_USERNAME;\n  text: string;\n}\n\ninterface SetOnlineAction {\n  type: typeof SET_ONLINE;\n  value: boolean;\n}\n\nexport type ActionTypes = AddNotesAction | SetUsernameAction | SetOnlineAction;\n\n// Actions\n\nexport function addNotes(text: string): ActionTypes {\n  return {\n    type: ADD_NOTES,\n    text,\n  };\n}\n\nexport function setUsername(text: string): ActionTypes {\n  return {\n    type: SET_USERNAME,\n    text,\n  };\n}\n\nexport function setOnline(value: boolean): ActionTypes {\n  return {\n    type: SET_ONLINE,\n    value,\n  };\n}\n","// External\n\nimport React, { Component, createRef } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\n// Declaration\n\nclass AvalonScrollbars extends Component<{}, {}> {\n  scrollbars = createRef<Scrollbars>();\n  top = 1;\n  threshold = 0.95;\n\n  constructor(props: {}) {\n    super(props);\n    this.autoScroll = this.autoScroll.bind(this);\n    this.getScrollBottom = this.getScrollBottom.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.setThreshold.bind(this));\n    this.setThreshold();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.setThreshold.bind(this));\n  }\n\n  setThreshold() {\n    this.threshold = window.innerWidth >= 800 ? 0.975 : 0.875;\n  }\n\n  getScrollBottom() {\n    try {\n      const ref = this.scrollbars.current!;\n      \n      this.top = ref.getValues().top;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  autoScroll() {\n    const ref = this.scrollbars.current!;\n\n    if (this.top > this.threshold) {\n      ref.scrollToBottom();\n    }\n  }\n\n  render() {\n    return (\n      <Scrollbars\n        ref={this.scrollbars}\n        autoHide\n        autoHideTimeout={200}\n        autoHideDuration={200}\n        onScroll={this.getScrollBottom}\n        renderTrackHorizontal={(props) => (\n          <div {...props} className=\"track-horizontal\" />\n        )}\n        renderTrackVertical={(props) => (\n          <div {...props} className=\"track-vertical\" />\n        )}\n        renderThumbHorizontal={(props) => (\n          <div {...props} className=\"thumb-horizontal\" />\n        )}\n        renderThumbVertical={(props) => (\n          <div {...props} className=\"thumb-vertical\" />\n        )}\n        renderView={(props) => <div {...props} className=\"view\" />}\n      >\n        {this.props.children}\n      </Scrollbars>\n    );\n  }\n}\n\nexport default AvalonScrollbars;\n","// External\n\nimport React from \"react\";\n\n// Declaration\n\ninterface ButtonProps {\n\tclassName: string;\n\tonClick: ((...args: any[]) => void) | undefined;\n\ttext: string;\n\ttype: \"button\" | \"submit\" | \"reset\" | undefined;\n}\n\nconst Button = (props: ButtonProps) => {\n\treturn (\n\t\t<button\n\t\t\tclassName={props.className}\n\t\t\tonClick={props.onClick}\n\t\t\ttype={props.type}\n\t\t>\n\t\t\t<p>{props.text}</p>\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","// External\n\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faHome,\n  faLock,\n  faUser,\n  faEnvelope,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faHome, faLock, faUser, faEnvelope, faPaperPlane);\n\n// Declaration\n\ninterface InputProps {\n  icon: any;\n  name: string;\n  placeholder: string;\n  onChange: (...args: any[]) => void;\n  type: string;\n}\n\ninterface ChatInputProps {\n  onChange: (...args: any[]) => void;\n  value: string;\n}\n\nexport const Input = (props: InputProps) => {\n  return (\n    <div className=\"input\">\n      <FontAwesomeIcon icon={[\"fas\", props.icon]} />\n      <input\n        name={props.name}\n        placeholder={props.placeholder}\n        onChange={props.onChange}\n        type={props.type}\n        required\n      ></input>\n    </div>\n  );\n};\n\nexport const ChatInput = (props: ChatInputProps) => {\n  return (\n    <div className=\"chat-input\">\n      <input\n        onChange={props.onChange}\n        placeholder=\"Enter your message here.\"\n        value={props.value}\n      ></input>\n      <button type=\"submit\">\n        <FontAwesomeIcon icon={[\"fas\", \"paper-plane\"]} />\n      </button>\n    </div>\n  );\n};\n","// External\n\nimport { combineReducers } from \"redux\";\n\n// Types\n\nimport { ADD_NOTES, SET_USERNAME, SET_ONLINE, ActionTypes } from \"./actions\";\n\n// Reducers\n\nfunction notes(state = \"\", action: ActionTypes): string {\n\tswitch (action.type) {\n\t\tcase ADD_NOTES:\n\t\t\treturn action.text;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction username(state = \"\", action: ActionTypes): string {\n\tswitch (action.type) {\n\t\tcase SET_USERNAME:\n\t\t\treturn action.text;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction online(state: boolean = false, action: ActionTypes): boolean {\n\tswitch (action.type) {\n\t\tcase SET_ONLINE:\n\t\t\treturn action.value;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const rootReducer = combineReducers({\n\tnotes,\n\tusername,\n\tonline\n});\n\nexport type rootType = ReturnType<typeof rootReducer>;\n","// External\n\nimport { createStore } from \"redux\";\n\n// Root\n\nimport { rootReducer } from \"./reducers\";\n\nconst store = createStore(rootReducer);\nexport default store;\n","import Parse from \"../../parse/parse\";\nimport store from \"../../redux/store\";\nimport { setOnline } from \"../../redux/actions\";\n\nexport async function login(\n\tusername: string,\n\tpassword: string,\n\tonerror: (...args: any[]) => any\n) {\n\ttry {\n\t\tawait Parse.User.logIn(username, password);\n\t\tParse.Cloud.run(\"setUsersAcls\", {});\n\t\tstore.dispatch(setOnline(true));\n\t} catch (error) {\n\t\tonerror(error.message);\n\t}\n}\n","// External\n\nimport React, { Component, ChangeEvent, FormEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Internal\n\nimport AvalonScrollbars from \"../components/utils/AvalonScrollbars\";\nimport Button from \"../components/utils/Button\";\nimport { Input } from \"../components/utils/Input\";\n\nimport { login } from \"../components/auth/login\";\n\n// Styles\n\nimport \"../styles/Login.scss\";\n\n// Declaration\n\nclass Login extends Component<\n  {},\n  {\n    error: string | null;\n    username: string;\n    password: string;\n  }\n> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      error: null,\n      username: \"\",\n      password: \"\",\n    };\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleUsernameChange(event: ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      username: event.target.value,\n    });\n  }\n\n  handlePasswordChange(event: ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: event.target.value,\n    });\n  }\n\n  handleSubmit(event: FormEvent) {\n    event.preventDefault();\n    this.setState({ error: null });\n    login(this.state.username, this.state.password, (err) =>\n      this.setState({ error: err })\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"Background\" className=\"dark full\">\n        <AvalonScrollbars>\n          <div id=\"Login\" className=\"section\">\n            <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n              <div className=\"logo-big\" />\n              <h1>THE RESISTANCE: AVALON</h1>\n              <h2>WILL GOOD TRIUMPH OVER EVIL?</h2>\n              <p>\n                <strong>The Resistance: Avalon</strong> is a social deduction\n                game created by Don Eskridge.\n              </p>\n              <p className=\"last\">\n                Based on Arthurian legend, the loyal servants of Arthur work\n                together to find the members of the Resistance while protecting\n                the identity of Merlin. The minions of Mordred attempt to sneak\n                onto the Resistance team in order to deduce the identity of\n                Merlin and assassinate him. Will the minions of Mordred kill\n                Merlin, or will the loyal servants triumph over evil?\n              </p>\n              <p className=\"last\">\n                The game is free to play on this site, and always will be.\n              </p>\n              {this.state.error ? (\n                <p className=\"error\">Error: {this.state.error}</p>\n              ) : null}\n              <div className=\"glow\" />\n              <div className=\"after-glow\">\n                <Input\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  icon=\"user\"\n                  onChange={this.handleUsernameChange}\n                />\n                <Input\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  icon=\"lock\"\n                  onChange={this.handlePasswordChange}\n                />\n                <Button\n                  type=\"submit\"\n                  text=\"Login\"\n                  onClick={undefined}\n                  className=\"\"\n                />\n                <p>\n                  <Link to=\"/signup\">Sign up</Link>\n                </p>\n              </div>\n            </form>\n          </div>\n        </AvalonScrollbars>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import Parse from \"../../parse/parse\";\nimport store from \"../../redux/store\";\nimport { setOnline } from \"../../redux/actions\";\n\nexport async function signup(\n\temail: string,\n\tpassword: string,\n\tusername: string,\n\tonerror: (...args: any[]) => any\n) {\n\tvar user = new Parse.User();\n\tuser.set(\"email\", email);\n\tuser.set(\"username\", username);\n\tuser.set(\"password\", password);\n\n\ttry {\n\t\tawait user.signUp();\n\t\tParse.Cloud.run(\"setUsersAcls\", {});\n\t\tstore.dispatch(setOnline(true));\n\t} catch (error) {\n\t\tonerror(error.message);\n\t}\n}\n","// External\n\nimport React, { Component, ChangeEvent, FormEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Internal\n\nimport AvalonScrollbars from \"../components/utils/AvalonScrollbars\";\nimport Button from \"../components/utils/Button\";\nimport { Input } from \"../components/utils/Input\";\n\nimport { signup } from \"../components/auth/signup\";\n\n// Styles\n\nimport \"../styles/Login.scss\";\n\n// Declaration\n\nclass Signup extends Component<\n  {},\n  {\n    error: string | null;\n    username: string;\n    email: string;\n    password: string;\n  }\n> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      error: null,\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    };\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleUsernameChange(event: ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      username: event.target.value,\n    });\n  }\n\n  handleEmailChange(event: ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      email: event.target.value,\n    });\n  }\n\n  handlePasswordChange(event: ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: event.target.value,\n    });\n  }\n\n  handleSubmit(event: FormEvent) {\n    event.preventDefault();\n    this.setState({ error: null });\n    signup(this.state.email, this.state.password, this.state.username, (err) =>\n      this.setState({ error: err })\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"Background\" className=\"dark full\">\n        <AvalonScrollbars>\n          <div id=\"Signup\" className=\"section\">\n            <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n              <div className=\"logo-big\" />\n              <div className=\"smoke\" />\n              <h1>THE RESISTANCE: AVALON</h1>\n              <h2>WILL GOOD TRIUMPH OVER EVIL?</h2>\n              <p>\n                You are about to join <strong>avalon.ist.</strong> Enter your\n                login information in the form below.\n              </p>\n              <p className=\"last\">\n                Upon completing this registration, you have agreed to follow the{\" \"}\n                <Link to=\"/tou\">terms of use.</Link>\n              </p>\n              {this.state.error ? (\n                <p className=\"error\">Error: {this.state.error}</p>\n              ) : null}\n              <div className=\"glow\" />\n              <div className=\"after-glow\">\n                <Input\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  icon=\"user\"\n                  onChange={this.handleUsernameChange}\n                />\n                <Input\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  icon=\"envelope\"\n                  onChange={this.handleEmailChange}\n                />\n                <Input\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  icon=\"lock\"\n                  onChange={this.handlePasswordChange}\n                />\n                <Button\n                  type=\"submit\"\n                  text=\"Sign up\"\n                  onClick={undefined}\n                  className=\"\"\n                />\n                <p>\n                  <Link to=\"/\">Log In</Link>\n                </p>\n              </div>\n            </form>\n          </div>\n        </AvalonScrollbars>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import Parse from \"../../parse/parse\";\nimport store from \"../../redux/store\";\nimport { setOnline } from \"../../redux/actions\";\n\nexport async function logout() {\n\tParse.User.logOut().then(\n\t\t() => {\n\t\t\tstore.dispatch(setOnline(false));\n\t\t},\n\t\t(error) => {\n\t\t\tconsole.log(\"error\", error);\n\t\t}\n\t);\n}","// External\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList, faSignOutAlt, faCog } from \"@fortawesome/free-solid-svg-icons\";\n\n// Internal\n\nimport AvalonScrollbars from \"../components/utils/AvalonScrollbars\";\nimport { rootType } from \"../redux/reducers\";\n\nimport { logout } from \"../components/auth/logout\";\n\n// Import Styles\n\nimport \"../styles/Navbar.scss\";\n\n// Types\n\nconst mapState = (state: rootType) => {\n  const { username } = state;\n  return { username };\n};\n\ninterface NavbarState {\n  points: [number, number, number];\n  showSidebar: boolean;\n}\n\nclass Navbar extends Component<{ username: string }, NavbarState> {\n  constructor(props: { username: string }) {\n    super(props);\n    this.state = {\n      points: [0, 0, 0],\n      showSidebar: false,\n    };\n    this.setClipPath = this.setClipPath.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.setClipPath);\n    this.setClipPath();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.setClipPath);\n  }\n\n  setClipPath() {\n    const inner = document.getElementById(\"Inner\")!;\n    const outer = document.getElementById(\"Outer\")!;\n\n    this.setState({\n      points: [\n        inner.clientHeight / 2,\n        outer.clientWidth - inner.clientHeight / 2,\n        inner.clientWidth - inner.clientHeight / 2,\n      ],\n    });\n  }\n\n  toggleSidebar() {\n    this.setState({ showSidebar: !this.state.showSidebar });\n  }\n\n  handleLogout() {\n    logout();\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"Navbar-Full\" className=\"section\">\n          <div id=\"Navbar\" className=\"section\">\n            <div className=\"logo\" />\n            <div\n              id=\"Outer\"\n              style={{\n                clipPath:\n                  \"polygon(0 0, 100% 0,\" +\n                  this.state.points[1] +\n                  \"px 50%, 100% 100%, 0 100%, \" +\n                  this.state.points[0] +\n                  \"px 50%)\",\n              }}\n              className=\"links outer\"\n            >\n              <div\n                id=\"Inner\"\n                style={{\n                  clipPath:\n                    \"polygon(0 0, 100% 0, 100% 100%, 0 100%, \" +\n                    this.state.points[0] +\n                    \"px 50%)\",\n                }}\n                className=\"links inner\"\n              >\n                <div>\n                  <Link to=\"/lobby\">LOBBY</Link>\n                  <Link to=\"/start-here\">START HERE</Link>\n                  <Link to=\"/community\">COMMUNITY</Link>\n                  <Link to=\"/stats\">STATS</Link>\n                  <Link to=\"/dev\">DEVELOPMENT</Link>\n                </div>\n                <div>\n                  <Link to={\"/profile/\" + this.props.username}>\n                    {this.props.username}\n                  </Link>\n                  <button onClick={() => console.log(\"hi\")}>\n                    <FontAwesomeIcon icon={faCog} />\n                  </button>\n                  <button onClick={this.handleLogout}>\n                    <FontAwesomeIcon icon={faSignOutAlt} />\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div id=\"Navbar-Mobile\" className=\"section\">\n            <div className=\"logo\" />\n            <button onClick={this.toggleSidebar}>\n              <FontAwesomeIcon icon={faList} />\n            </button>\n          </div>\n        </div>\n        <div\n          className=\"links list\"\n          style={{\n            transform: this.state.showSidebar\n              ? \"translate(0%, 0%)\"\n              : \"translate(100%, 0%)\",\n          }}\n        >\n          <AvalonScrollbars>\n            <div className=\"links container\">\n              <Link to=\"/lobby\">LOBBY</Link>\n              <Link to=\"/start-here\">START HERE</Link>\n              <Link to=\"/community\">COMMUNITY</Link>\n              <Link to=\"/stats\">STATS</Link>\n              <Link to=\"/dev\">DEVELOPMENT</Link>\n              <div />\n              <Link to={\"/profile/\" + this.props.username}>PROFILE</Link>\n              <button onClick={() => console.log(\"hi\")}>SETTINGS</button>\n              <button onClick={this.handleLogout}>LOG OUT</button>\n            </div>\n          </AvalonScrollbars>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapState, null)(Navbar);\n","// External\n\nimport React, { Component } from \"react\";\n\n// Internal\n\nimport AvalonScrollbars from \"../components/utils/AvalonScrollbars\";\n\nimport Navbar from \"./Navbar\";\n\n// Styles\n\nimport \"../styles/Verify.scss\";\n\n// Declaration\n\nclass Verify extends Component {\n  initialHeight = window.innerHeight;\n\n  render() {\n    return (\n      <div id=\"Background-2\" className=\"dark full\">\n        <Navbar username=\"\" />\n        <AvalonScrollbars>\n          <div\n            id=\"Verify\"\n            style={{ minHeight: this.initialHeight + \"px\" }}\n            className=\"section\"\n          >\n            <div className=\"welcome\" />\n            <h2>WELCOME TO AVALON.IST</h2>\n            <p>\n              You have received an email with a confirmation link. If you do not\n              see the email, please check your junk or spam folders. Contact a\n              moderator if you experience any issues. Refresh the page after\n              verification.\n            </p>\n          </div>\n        </AvalonScrollbars>\n      </div>\n    );\n  }\n}\n\nexport default Verify;\n","// External\n\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\n// Internal\n\nimport AvalonScrollbars from '../../components/utils/AvalonScrollbars'\n\n// Styles\n\nimport '../../styles/Lobby/Announcements.scss'\n\n// Declaration\n\ninterface AnnouncementProps {\n  date: string\n  text: string\n}\n\nconst Announcement = (props: AnnouncementProps) => {\n  return (\n    <p className=\"announcement\">\n      <span className=\"date\">{props.date}</span>\n      <Link to=\"/announcement\">{props.text}</Link>\n    </p>\n  )\n}\n\nclass Announcements extends Component {\n  render() {\n    return (\n      <div id=\"Announcements\" className=\"row\">\n        <h3>\n          <p>LATEST ANNOUNCEMENTS</p>\n        </h3>\n        <AvalonScrollbars>\n          <Announcement date=\"7/11/2020\" text=\"This is an announcement\" />\n          <Announcement\n            date=\"2/28/2019\"\n            text=\"This is a larger announcement to test paragraph dimensions\"\n          />\n          <Announcement\n            date=\"2/28/2019\"\n            text=\"This is a larger announcement to test paragraph dimensions\"\n          />\n          <Announcement\n            date=\"2/28/2019\"\n            text=\"This is a larger announcement to test paragraph dimensions\"\n          />\n        </AvalonScrollbars>\n      </div>\n    )\n  }\n}\n\nexport default Announcements\n","// External\n\nimport React, { Component } from \"react\";\n\n// Styles\n\nimport \"../../styles/Lobby/NewAvatars.scss\";\n\n// Declaration\n\ninterface AvatarProps {\n  url: string;\n}\n\nconst Avatar = (props: AvatarProps) => {\n  return (\n    <div\n      className=\"avatar\"\n      style={{ backgroundImage: \"url(\" + props.url + \")\" }}\n    />\n  );\n};\n\nclass NewAvatars extends Component {\n  render() {\n    return (\n      <div id=\"New-Avatars\" className=\"row\">\n        <h3>\n          <p>BRAND NEW AVATARS</p>\n        </h3>\n        <div className=\"ave-container\">\n          <Avatar url=\"https://cdn.discordapp.com/attachments/688596182758326313/732067339746541628/base-res.png\" />\n          <Avatar url=\"https://cdn.discordapp.com/attachments/688596182758326313/732067339746541628/base-res.png\" />\n          <Avatar url=\"https://cdn.discordapp.com/attachments/688596182758326313/732067339746541628/base-res.png\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewAvatars;\n","// External\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Internal\n\nimport socket from \"../../socket-io/socket-io\";\nimport AvalonScrollbars from \"../../components/utils/AvalonScrollbars\";\n\n// Import Styles\n\nimport \"../../styles/Lobby/PlayerList.scss\";\n\n// Declaration\n\ninterface PlayerProps {\n  username: string;\n}\n\ninterface PlayerTabProps {\n  players: PlayerProps[];\n  title: string;\n}\n\ninterface PlayerTabState {\n  showTab: boolean;\n}\n\ninterface PlayerListState {\n  areAdmins: PlayerProps[];\n  areContribs: PlayerProps[];\n  arePlayers: PlayerProps[];\n  loaded: boolean;\n}\n\nconst Player = (props: PlayerProps) => {\n  return (\n    <p className=\"player\">\n      <Link className=\"player-name\" to={\"/profile/\" + props.username}>\n        {props.username}\n      </Link>\n      <span className=\"player-elo\">1500</span>\n    </p>\n  );\n};\n\nclass PlayerTab extends Component<PlayerTabProps, PlayerTabState> {\n  constructor(props: PlayerTabProps) {\n    super(props);\n    this.state = {\n      showTab: true,\n    };\n    this.toggleTab = this.toggleTab.bind(this);\n  }\n\n  toggleTab() {\n    this.setState({ showTab: !this.state.showTab });\n  }\n\n  render() {\n    return (\n      <div className=\"the-whole-tab\">\n        <p className=\"tab-title\">\n          <button onClick={this.toggleTab}>\n            <i className={this.state.showTab ? \"arrow up\" : \"arrow down\"} />\n          </button>\n          <span>\n            {this.props.title}({this.props.players.length})\n          </span>\n        </p>\n        {this.state.showTab ? (\n          <div className=\"player-tab\">\n            {this.props.players.map((p, i) => (\n              <Player username={p.username} key={\"Player\" + i} />\n            ))}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nclass PlayerList extends Component<{}, PlayerListState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      areAdmins: [],\n      areContribs: [],\n      arePlayers: [],\n      loaded: true,\n    };\n    this.parseClientsOnline = this.parseClientsOnline.bind(this);\n  }\n\n  componentDidMount() {\n    socket\n      .on(\"clientsOnlineResponse\", this.parseClientsOnline)\n      .emit(\"clientsOnlineRequest\");\n  }\n\n  componentWillUnmount() {\n    socket.off(\"clientsOnlineResponse\", this.parseClientsOnline);\n  }\n\n  parseClientsOnline(data: any) {\n    console.log(data);\n  }\n\n  render() {\n    return (\n      <div id=\"Player-List\" className=\"row\">\n        <h3>\n          <p>PLAYER LIST</p>\n        </h3>\n        {this.state.loaded ? (\n          <AvalonScrollbars>\n            <PlayerTab title=\"Moderators\" players={this.state.areAdmins} />\n            <PlayerTab title=\"Contributors\" players={this.state.areContribs} />\n            <PlayerTab title=\"Players\" players={this.state.arePlayers} />\n          </AvalonScrollbars>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default PlayerList;\n","// External\n\nimport React, { Component, ChangeEvent, FormEvent, createRef } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Internal\n\nimport socket from '../../socket-io/socket-io';\nimport AvalonScrollbars from '../../components/utils/AvalonScrollbars';\nimport { ChatInput } from '../../components/utils/Input';\n\n// Styles\n\nimport '../../styles/Lobby/Chat.scss';\n\n// Declaration\n\ninterface ChatMessageProps {\n  public: boolean;\n  content: string;\n  author: string;\n  to: string[];\n  type: number;\n  character: number;\n  timestamp: number;\n}\n\ninterface ChatProps {\n  code?: number;\n}\n\ninterface ChatState {\n  messages: ChatMessageProps[];\n  content: string;\n}\n\nconst ChatMessage = (props: ChatMessageProps) => {\n  const messageDate = new Date(props.timestamp);\n  const typeClass = ['client ', 'server ', 'broadcast '][props.type];\n  const characterClass = ['negative', 'neutral', 'positive', 'highlighted'][props.character + 1];\n\n  return (\n    <div className={'message ' + typeClass + characterClass}>\n      <span className=\"hour\">\n        {('0' + messageDate.getHours()).slice(-2) + ':' + ('0' + messageDate.getMinutes()).slice(-2)}\n      </span>\n      <p className=\"text\">\n        {props.type < 1 ? (\n          <Link className=\"username\" to={'/profile/' + props.author}>\n            {props.author}:\n          </Link>\n        ) : null}\n        <span className=\"content\">{props.content}</span>\n      </p>\n    </div>\n  );\n};\n\nclass Chat extends Component<ChatProps, ChatState> {\n  scrollbars = createRef<AvalonScrollbars>();\n  eventNames: string[] = [\n    'generalChatUpdate',\n    'generalChatResponse',\n    'generalChatJoin',\n    'generalChatLeave',\n    'generalChatRequest',\n    'messageToGeneral',\n  ];\n\n  constructor(props: ChatProps) {\n    super(props);\n    this.state = {\n      messages: [],\n      content: '',\n    };\n    this.toGameChat = this.toGameChat.bind(this);\n    this.startChat = this.startChat.bind(this);\n    this.endChat = this.endChat.bind(this);\n    this.triggerRequest = this.triggerRequest.bind(this);\n    this.parseChat = this.parseChat.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.code === undefined) {\n      this.startChat();\n    } else if (this.props.code > -1) {\n      this.toGameChat();\n      this.startChat();\n    }\n  }\n\n  componentWillUnmount() {\n    this.endChat();\n  }\n\n  componentDidUpdate(prevProps: ChatProps) {\n    if (prevProps.code !== this.props.code && this.props.code && this.props.code > -1) {\n      this.toGameChat();\n      this.startChat();\n    }\n\n    const chatContainer = this.scrollbars.current!;\n    chatContainer.autoScroll();\n  }\n\n  toGameChat() {\n    this.eventNames = [\n      'gameChatUpdate',\n      'gameChatResponse' + this.props.code,\n      'gameChatJoin',\n      'gameChatLeave',\n      'gameChatRequest',\n      'messageToGame',\n    ];\n  }\n\n  startChat() {\n    socket.on(this.eventNames[0], this.triggerRequest);\n    socket.on(this.eventNames[1], this.parseChat);\n\n    this.triggerRequest();\n  }\n\n  endChat() {\n    socket.off(this.eventNames[0], this.triggerRequest);\n    socket.off(this.eventNames[1], this.parseChat);\n  }\n\n  triggerRequest() {\n    console.log(this.props.code);\n\n    socket.emit(this.eventNames[4], {\n      roomNumber: this.props.code,\n    });\n  }\n\n  parseChat(messages: ChatMessageProps[]) {\n    this.setState({ messages });\n  }\n\n  handleChange(event: ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      content: event.target.value,\n    });\n  }\n\n  handleSubmit(event: FormEvent) {\n    event.preventDefault();\n\n    if (this.state.content === '') return;\n    socket.emit(this.eventNames[5], {\n      content: this.state.content,\n      roomNumber: this.props.code,\n    });\n\n    this.setState({ content: '' });\n  }\n\n  render() {\n    return (\n      <div id=\"Chat\" className=\"row\">\n        <AvalonScrollbars ref={this.scrollbars}>\n          {this.state.messages.map((m, i) => (\n            <ChatMessage {...m} key={'message' + i} />\n          ))}\n        </AvalonScrollbars>\n        <form className=\"message-input\" onSubmit={this.handleSubmit}>\n          <ChatInput onChange={this.handleChange} value={this.state.content} />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","// External\n\nimport React from \"react\";\n\n// Styles\n\nimport \"../../styles/Utils/Slider.scss\";\n\ninterface SliderProps {\n\tvalue: boolean;\n\tonClick: (...args: any[]) => void;\n}\n\nconst Slider = (props: SliderProps) => {\n\treturn (\n\t\t<label className=\"switch\">\n\t\t\t<input\n\t\t\t\treadOnly\n\t\t\t\tchecked={props.value}\n\t\t\t\tonClick={props.onClick}\n\t\t\t\ttype=\"checkbox\"\n\t\t\t/>\n\t\t\t<span className=\"slider\"></span>\n\t\t</label>\n\t);\n};\n\nexport default Slider;\n","// External\n\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\n\n// Styles\n\nimport \"../../styles/Utils/ListInput.scss\";\n\n// Declaration\n\ninterface ObjectProps {\n  onClick: (...args: any[]) => void;\n  text: string;\n}\n\ninterface ListProps {\n  objects: ObjectProps[];\n  onClick: (...args: any[]) => void;\n  show: boolean;\n  title: string;\n}\n\nconst List = (props: ListProps) => {\n  return (\n    <div className=\"list\">\n      <button\n        className={\"list-button \" + props.show}\n        onClick={props.onClick}\n        type=\"button\"\n      >\n        <p>{props.title}</p>\n        <FontAwesomeIcon icon={faCaretDown} />\n      </button>\n      <div className=\"dropdown-content\">\n        {props.show\n          ? props.objects.map((p, i) => (\n              <button\n                className=\"dropdown-item\"\n                key={\"option\" + i}\n                onClick={p.onClick}\n                type=\"button\"\n              >\n                <p>{p.text}</p>\n              </button>\n            ))\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","// External\n\nimport React, { Component, FormEvent } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n// Internal\n\nimport socket from \"../../socket-io/socket-io\";\nimport Slider from \"../../components/utils/Slider\";\nimport List from \"../../components/utils/ListInput\";\n\n// Styles\n\nimport \"../../styles/Utils/SettingsMenu.scss\";\n\n// Declaration\n\ninterface GameFormProps {\n  title: string;\n  onExit: (...args: any[]) => void;\n  createsGame: boolean;\n  roomToModify?: number;\n}\n\ninterface GameFormState {\n  showPlayerMax: boolean;\n  playerMax: number;\n  roleSettings: {\n    merlin: boolean;\n    percival: boolean;\n    morgana: boolean;\n    assassin: boolean;\n    oberon: boolean;\n    mordred: boolean;\n    card: boolean;\n  };\n  redirect: boolean;\n  processing: boolean;\n  playerRoom: number;\n}\n\nclass GameForm extends Component<GameFormProps, GameFormState> {\n  constructor(props: GameFormProps) {\n    super(props);\n    this.state = {\n      showPlayerMax: false,\n      playerMax: 6,\n      roleSettings: {\n        merlin: true,\n        percival: true,\n        morgana: true,\n        assassin: true,\n        oberon: false,\n        mordred: false,\n        card: false,\n      },\n      redirect: false,\n      processing: false,\n      playerRoom: -1,\n    };\n    this.createGameSuccess = this.createGameSuccess.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.sendCreateRequest = this.sendCreateRequest.bind(this);\n    this.sendModifyRequest = this.sendModifyRequest.bind(this);\n  }\n\n  fabFour = {\n    merlin: true,\n    percival: true,\n    morgana: true,\n    assassin: true,\n    oberon: false,\n    mordred: false,\n    card: false,\n  };\n\n  eightPlayers = {\n    merlin: true,\n    percival: true,\n    morgana: true,\n    assassin: true,\n    oberon: false,\n    mordred: false,\n    card: true,\n  };\n\n  ninePlayers = {\n    merlin: true,\n    percival: true,\n    morgana: true,\n    assassin: true,\n    oberon: false,\n    mordred: true,\n    card: true,\n  };\n\n  tenPlayers = {\n    merlin: true,\n    percival: true,\n    morgana: true,\n    assassin: true,\n    oberon: true,\n    mordred: true,\n    card: true,\n  };\n\n  componentDidMount() {\n    socket.on(\"createGameSuccess\", this.createGameSuccess);\n  }\n\n  createGameSuccess(data: number) {\n    this.setState({\n      processing: false,\n      redirect: true,\n      playerRoom: data,\n    });\n  }\n\n  async handleSubmit(event: FormEvent) {\n    event.preventDefault();\n    this.setState(\n      { processing: true },\n      this.props.createsGame ? this.sendCreateRequest : this.sendModifyRequest\n    );\n  }\n\n  sendCreateRequest() {\n    socket.emit(\"createGame\", {\n      roleSettings: this.state.roleSettings,\n      maxPlayers: this.state.playerMax,\n    });\n  }\n\n  sendModifyRequest() {\n    socket.emit(\"editGame\", {\n      roomNumber: this.props.roomToModify,\n      roleSettings: this.state.roleSettings,\n      maxPlayers: this.state.playerMax,\n    })\n\n    this.props.onExit()\n  }\n\n  render() {\n    return (\n      <div className=\"settings-form\">\n        {this.state.redirect ? (\n          <Redirect to={\"/game/\" + this.state.playerRoom} />\n        ) : null}\n        <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n          <p className=\"title\">{this.props.title}</p>\n          <div className=\"input-container\">\n            <p className=\"handle\">Player Max</p>{\" \"}\n            <List\n              onClick={() =>\n                this.setState({\n                  showPlayerMax: !this.state.showPlayerMax,\n                })\n              }\n              show={this.state.showPlayerMax}\n              title={this.state.playerMax.toString()}\n              objects={[\n                {\n                  text: \"5\",\n                  onClick: () =>\n                    this.setState({\n                      playerMax: 5,\n                      showPlayerMax: false,\n                      roleSettings: this.fabFour,\n                    }),\n                },\n                {\n                  text: \"6\",\n                  onClick: () =>\n                    this.setState({\n                      playerMax: 6,\n                      showPlayerMax: false,\n                      roleSettings: this.fabFour,\n                    }),\n                },\n                {\n                  text: \"7\",\n                  onClick: () =>\n                    this.setState({\n                      playerMax: 7,\n                      showPlayerMax: false,\n                      roleSettings: this.fabFour,\n                    }),\n                },\n                {\n                  text: \"8\",\n                  onClick: () =>\n                    this.setState({\n                      playerMax: 8,\n                      showPlayerMax: false,\n                      roleSettings: this.eightPlayers,\n                    }),\n                },\n                {\n                  text: \"9\",\n                  onClick: () =>\n                    this.setState({\n                      playerMax: 9,\n                      showPlayerMax: false,\n                      roleSettings: this.ninePlayers,\n                    }),\n                },\n                {\n                  text: \"10\",\n                  onClick: () =>\n                    this.setState({\n                      playerMax: 10,\n                      showPlayerMax: false,\n                      roleSettings: this.tenPlayers,\n                    }),\n                },\n              ]}\n            />\n          </div>\n          <p className=\"subtitle\">Roles</p>\n          <div className=\"input-container\">\n            <Slider\n              value={this.state.roleSettings.merlin}\n              onClick={() =>\n                this.setState({\n                  roleSettings: {\n                    ...this.state.roleSettings,\n                    merlin: !this.state.roleSettings.merlin,\n                  },\n                })\n              }\n            />\n            <p className=\"handle\">Merlin</p>\n          </div>\n          <div className=\"input-container\">\n            <Slider\n              value={this.state.roleSettings.percival}\n              onClick={() =>\n                this.setState({\n                  roleSettings: {\n                    ...this.state.roleSettings,\n                    percival: !this.state.roleSettings.percival,\n                  },\n                })\n              }\n            />\n            <p className=\"handle\">Percival</p>\n          </div>\n          <div className=\"input-container\">\n            <Slider\n              value={this.state.roleSettings.morgana}\n              onClick={() =>\n                this.setState({\n                  roleSettings: {\n                    ...this.state.roleSettings,\n                    morgana: !this.state.roleSettings.morgana,\n                  },\n                })\n              }\n            />\n            <p className=\"handle\">Morgana</p>\n          </div>\n          <div className=\"input-container\">\n            <Slider\n              value={this.state.roleSettings.assassin}\n              onClick={() =>\n                this.setState({\n                  roleSettings: {\n                    ...this.state.roleSettings,\n                    assassin: !this.state.roleSettings.assassin,\n                  },\n                })\n              }\n            />\n            <p className=\"handle\">Assassin</p>\n          </div>\n          <div className=\"input-container\">\n            <Slider\n              value={this.state.roleSettings.oberon}\n              onClick={() =>\n                this.setState({\n                  roleSettings: {\n                    ...this.state.roleSettings,\n                    oberon: !this.state.roleSettings.oberon,\n                  },\n                })\n              }\n            />\n            <p className=\"handle\">Oberon</p>\n          </div>\n          <div className=\"input-container\">\n            <Slider\n              value={this.state.roleSettings.mordred}\n              onClick={() =>\n                this.setState({\n                  roleSettings: {\n                    ...this.state.roleSettings,\n                    mordred: !this.state.roleSettings.mordred,\n                  },\n                })\n              }\n            />\n            <p className=\"handle\">Mordred</p>\n          </div>\n          <p className=\"subtitle\">Cards</p>\n          <div className=\"input-container\">\n            <Slider\n              value={this.state.roleSettings.card}\n              onClick={() =>\n                this.setState({\n                  roleSettings: {\n                    ...this.state.roleSettings,\n                    card: !this.state.roleSettings.card,\n                  },\n                })\n              }\n            />\n            <p className=\"handle\">Lady of the Lake</p>\n          </div>\n          {this.state.processing ? null : (\n            <div className=\"buttons\">\n              <button\n                className=\"bt-cancel\"\n                type=\"button\"\n                onClick={this.props.onExit}\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </button>\n              <button className=\"bt-accept\" type=\"submit\">\n                <FontAwesomeIcon icon={faCheck} />\n              </button>\n            </div>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default GameForm;\n","// External\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Internal\n\nimport socket from \"../../socket-io/socket-io\";\nimport AvalonScrollbars from \"../../components/utils/AvalonScrollbars\";\n\nimport GameForm from \"./GameForm\";\n\n// Styles\n\nimport \"../../styles/Lobby/GameList.scss\";\n\n// Declaration\n\ninterface AvatarProps {\n  url: string;\n}\n\ninterface GameLinkProps {\n  no: string;\n}\n\ninterface GameLinkState {\n  results: (boolean | undefined)[];\n  avatars: string[];\n  host: string;\n  mode: string;\n  spectators: number;\n  gameState: -1 | 0 | 1 | 2 | 3 | 4;\n}\n\ninterface GameListState {\n  gameIds: string[];\n  showCreate: boolean;\n}\n\nconst Avatar = (props: AvatarProps) => {\n  return (\n    <div\n      className=\"avatar\"\n      style={{ backgroundImage: \"url(\" + props.url + \")\" }}\n    />\n  );\n};\n\nclass GameLink extends Component<GameLinkProps, GameLinkState> {\n  gameStateClass = [\"waiting\", \"in-progress\", \"finished\", \"paused\", \"frozen\"];\n  gameState = [\"Waiting\", \"In Progress\", \"Finished\", \"Paused\", \"Frozen\"];\n\n  constructor(props: GameLinkProps) {\n    super(props);\n    this.state = {\n      results: [],\n      avatars: [],\n      host: \"\",\n      mode: \"\",\n      spectators: -1,\n      gameState: -1,\n    };\n    this.triggerRequest = this.triggerRequest.bind(this);\n    this.parseRoomLink = this.parseRoomLink.bind(this);\n  }\n\n  componentDidMount() {\n    socket.on(\"roomLinkUpdate\" + this.props.no, this.triggerRequest);\n    socket.on(\"roomLinkResponse\" + this.props.no, this.parseRoomLink);\n\n    socket.emit(\"roomLinkJoin\", {\n      roomNumber: this.props.no,\n    });\n  }\n\n  componentWillUnmount() {\n    socket.off(\"roomLinkUpdate\" + this.props.no, this.triggerRequest);\n    socket.off(\"roomLinkResponse\" + this.props.no, this.parseRoomLink);\n\n    socket.emit(\"roomLinkLeave\", {\n      roomNumber: this.props.no,\n    });\n  }\n\n  triggerRequest() {\n    socket.emit(\"roomLinkRequest\", {\n      roomNumber: this.props.no,\n    });\n  }\n\n  parseRoomLink(data: GameLinkState) {\n    this.setState(data);\n  }\n\n  render() {\n    return (\n      <Link className=\"game\" to={\"/game/\" + this.props.no}>\n        <h3>\n          <p>ROOM {\"#\" + this.props.no}</p>\n          {this.state.gameState > -1 ? (\n            <p className={this.gameStateClass[this.state.gameState]}>\n              {this.gameState[this.state.gameState]}\n            </p>\n          ) : null}\n        </h3>\n        <p className=\"tracker\">\n          {this.state.results.map((r, i) => (\n            <span key={i} className={\"mission \" + r} />\n          ))}\n        </p>\n        <p>\n          <span className=\"title\">HOST:</span>\n          {this.state.host}\n        </p>\n        <p>\n          <span className=\"title\">MODE:</span>\n          {this.state.mode}\n        </p>\n        <p>\n          <span className=\"title\">SPECTATORS:</span>\n          {this.state.spectators}\n        </p>\n        <div className=\"avatars\">\n          {this.state.avatars.map((r, i) => (\n            <Avatar key={i} url={r} />\n          ))}\n        </div>\n      </Link>\n    );\n  }\n}\n\n// Class\n\nclass GameList extends Component<{}, GameListState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      gameIds: [],\n      showCreate: false,\n    };\n    this.triggerRequest = this.triggerRequest.bind(this);\n    this.parseRoomList = this.parseRoomList.bind(this);\n  }\n\n  componentDidMount() {\n    socket.on(\"roomListUpdate\", this.triggerRequest);\n    socket.on(\"roomListResponse\", this.parseRoomList);\n\n    socket.emit(\"roomListJoin\");\n  }\n\n  componentWillUnmount() {\n    socket.off(\"roomListUpdate\", this.triggerRequest);\n    socket.off(\"roomListResponse\", this.parseRoomList);\n\n    socket.emit(\"roomListLeave\");\n  }\n\n  triggerRequest() {\n    socket.emit(\"roomListRequest\");\n  }\n\n  parseRoomList(data: string[]) {\n    this.setState({ gameIds: data });\n  }\n\n  render() {\n    return (\n      <div id=\"Game-List\" className=\"row\">\n        <h3>\n          <p>CURRENT GAMES</p>\n        </h3>\n        <div className=\"game-list-settings\">\n          <button\n            className=\"game-list-create\"\n            onClick={() =>\n              this.setState({ showCreate: !this.state.showCreate })\n            }\n          >\n            CREATE\n          </button>\n        </div>\n        <AvalonScrollbars>\n          {this.state.gameIds\n            .map((id) => <GameLink no={id} key={\"Game\" + id} />)\n            .reverse()}\n        </AvalonScrollbars>\n        {this.state.showCreate ? (\n          <GameForm\n            title=\"CREATE A NEW GAME\"\n            onExit={() => this.setState({ showCreate: false })}\n            createsGame={true}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default GameList;\n","// External\n\nimport React, { Component } from \"react\";\n\n// Internal\n\nimport AvalonScrollbars from \"../components/utils/AvalonScrollbars\";\n\nimport Navbar from \"./Navbar\";\nimport Announcements from \"./Lobby/Announcements\";\nimport NewAvatars from \"./Lobby/NewAvatars\";\nimport PlayerList from \"./Lobby/PlayerList\";\nimport Chat from \"./Lobby/Chat\";\nimport GameList from \"./Lobby/GameList\";\n\n// Styles\n\nimport \"../styles/Lobby.scss\";\n\n// Declaration\n\nclass Lobby extends Component {\n  initialHeight = Math.max(window.innerHeight, 630);\n\n  render() {\n    return (\n      <div id=\"Background-2\" className=\"light full\">\n        <Navbar username=\"\" />\n        <AvalonScrollbars>\n          <div\n            id=\"Lobby\"\n            className=\"section\"\n            style={{ minHeight: this.initialHeight + \"px\" }}\n          >\n            <div className=\"column section\">\n              <div id=\"Welcome\" className=\"row\" />\n              <Announcements />\n              <NewAvatars />\n              <PlayerList />\n            </div>\n            <div className=\"column section\">\n              <Chat />\n            </div>\n            <div className=\"column section\">\n              <GameList />\n            </div>\n          </div>\n        </AvalonScrollbars>\n      </div>\n    );\n  }\n}\n\nexport default Lobby;\n","// External\n\nimport React, { Component } from 'react'\nimport { RouteComponentProps } from 'react-router'\n\n// Styles\n\nimport '../styles/Globals.scss'\n\n// Declaration\n\ninterface ProfileProps {\n  username: string\n}\n\nclass Profile extends Component<RouteComponentProps<ProfileProps>, {}> {\n  player: string = \"I don't exist\"\n\n  render() {\n    return (\n      <p>\n        This is {this.props.match.params.username}'s profile: {this.player}\n      </p>\n    )\n  }\n}\n\nexport default Profile\n","// External\n\nimport React, { Component, ChangeEvent, createRef } from \"react\";\nimport { Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\n\n// Internal\n\nimport AvalonScrollbars from \"../../components/utils/AvalonScrollbars\";\n\nimport { rootType } from \"../../redux/reducers\";\nimport { addNotes } from \"../../redux/actions\";\n\n// Styles\n\nimport \"../../styles/Game/Notes.scss\";\n\n// Declaration\n\ninterface NoteProps {\n  notes: string;\n  dispatch: Dispatch;\n}\n\nconst mapState = (state: rootType) => {\n  const { notes } = state;\n  return { notes };\n};\n\nclass Notes extends Component<NoteProps, {}> {\n  textarea = createRef<HTMLTextAreaElement>();\n\n  constructor(props: NoteProps) {\n    super(props);\n    this.autoSetHeight = this.autoSetHeight.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.autoSetHeight();\n  }\n\n  componentDidUpdate(prevProps: NoteProps) {\n    if (prevProps.notes !== this.props.notes) this.autoSetHeight();\n  }\n\n  autoSetHeight() {\n    const ta = this.textarea.current!;\n\n    ta.style.height = \"auto\";\n    ta.style.height = ta.scrollHeight + \"px\";\n  }\n\n  handleChange(event: ChangeEvent<HTMLTextAreaElement>) {\n    this.props.dispatch(addNotes(event.target.value));\n  }\n\n  render() {\n    return (\n      <div id=\"Notes\" className=\"row\">\n        <AvalonScrollbars>\n          <textarea\n            value={this.props.notes}\n            ref={this.textarea}\n            onChange={this.handleChange}\n            spellCheck={false}\n            placeholder=\"Write your notes here!\"\n          />\n        </AvalonScrollbars>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapState, null)(Notes);\n","// External\n\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\n// Internal\n\nimport AvalonScrollbars from \"../../components/utils/AvalonScrollbars\";\n\nimport GameState from \"./GameState\";\n\n// Styles\n\nimport \"../../styles/Game/VoteHistory.scss\";\n\n// Declaration\n\ninterface VoteHistoryProps {\n  game: GameState;\n}\n\ninterface VoteHistoryState {\n  loading: boolean;\n  rowHeight: number;\n}\n\nclass VoteHistory extends Component<VoteHistoryProps, VoteHistoryState> {\n  constructor(props: VoteHistoryProps) {\n    super(props);\n    this.state = {\n      loading: true,\n      rowHeight: 0,\n    };\n    this.setRowHeight = this.setRowHeight.bind(this);\n    this.SetHeaders = this.SetHeaders.bind(this);\n    this.SetPlayers = this.SetPlayers.bind(this);\n  }\n\n  setRowHeight() {\n    if (this.state.loading) return;\n\n    const vhWidth = document.getElementById(\"Vote-History\")!.offsetWidth;\n\n    this.setState({ rowHeight: vhWidth / 70 });\n  }\n\n  componentDidMount() {\n    this.setState(\n      {\n        loading: false,\n      },\n      this.setRowHeight\n    );\n    window.addEventListener(\"resize\", this.setRowHeight);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.setRowHeight);\n  }\n\n  componentDidUpdate(prevProps: { game: GameState }) {\n    const old = prevProps.game;\n    const current = this.props.game;\n\n    if (\n      old.results !== current.results ||\n      old.missionLeader !== current.missionLeader ||\n      old.missionVotes !== current.missionVotes ||\n      old.missionTeams !== current.missionTeams\n    )\n      this.setState(\n        {\n          loading: false,\n        },\n        this.setRowHeight\n      );\n  }\n\n  SetHeaders() {\n    const items: JSX.Element[] = [];\n\n    const game = this.props.game;\n\n    for (let i = 0; i < 5; i++) {\n      if (game.missionVotes[i].length > 0)\n        items.push(\n          <th\n            className={\"vh-row mission \" + game.results[i]}\n            colSpan={game.missionVotes[i].length}\n            key={\"Mission\" + i}\n          >\n            Mission {i + 1}\n          </th>\n        );\n    }\n\n    return (\n      <tr className=\"vh-col\" style={{ fontSize: this.state.rowHeight + \"px\" }}>\n        <th className=\"vh-row title\">Players</th>\n        {items}\n      </tr>\n    );\n  }\n\n  SetPlayers(props: { p: string; ip: number }) {\n    let items: JSX.Element[] = [];\n\n    const game = this.props.game;\n    const votes = [\"undefined\", \"false\", \"true\"];\n\n    for (let i = 0; i < 5; i++) {\n      if (game.missionVotes[i].length > 0)\n        items = items.concat(\n          game.missionVotes[i].map((v, iv) => (\n            <td\n              className={\n                (game.missionLeader[i][iv] === props.ip ? \"leader \" : \"\") +\n                \"vh-vote \" +\n                votes[v[props.ip] + 1]\n              }\n              key={\"M\" + i + iv + \"P\" + props.ip}\n            >\n              {game.missionTeams[i][iv]?.includes(props.ip) ? (\n                <FontAwesomeIcon className=\"checkmark\" icon={faCheck} />\n              ) : null}\n            </td>\n          ))\n        );\n    }\n\n    return (\n      <tr className=\"vh-col\" style={{ fontSize: this.state.rowHeight + \"px\" }}>\n        <td className=\"vh-row\">{props.p}</td>\n        {items}\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <AvalonScrollbars>\n        <div id=\"Vote-History\" className=\"row\">\n          {this.state.loading ? null : (\n            <table id=\"vh-cont\" className=\"vh-cont\">\n              <tbody>\n                <this.SetHeaders />\n                {this.props.game.players.map((p, i_p) => (\n                  <this.SetPlayers ip={i_p} p={p} key={p} />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </AvalonScrollbars>\n    );\n  }\n}\n\nexport default VoteHistory;\n","// External\n\nimport React, { Component } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// Internal\n\nimport Chat from \"../Lobby/Chat\";\nimport GameState from \"./GameState\";\nimport PlayerList from \"../Lobby/PlayerList\";\nimport Notes from \"./Notes\";\nimport VoteHistory from \"./VoteHistory\";\n\n// Styles\n\nimport \"../../styles/Game/Tabs.scss\";\n\n// Declaration\n\ninterface TabProps {\n  text: string;\n  no: number;\n}\n\ninterface TabContainerProps {\n  game: GameState;\n}\n\ninterface TabContainerState {\n  tab: number;\n}\n\nclass Tabs extends Component<TabContainerProps, TabContainerState> {\n  constructor(props: TabContainerProps) {\n    super(props);\n    this.state = {\n      tab: 1,\n    };\n    this.Tab = this.Tab.bind(this);\n  }\n\n  Tab(props: TabProps) {\n    const setTab = () => this.setState({ tab: props.no });\n    const selected = this.state.tab === props.no;\n\n    return (\n      <button className={\"tag \" + selected} onClick={setTab}>\n        <p>{props.text}</p>\n      </button>\n    );\n  }\n\n  render() {\n    const routes = [\n      <Chat key=\"genChat\"/>,\n      <Chat code={this.props.game.code} key=\"gameChat\"/>,\n      <Notes notes=\"\" dispatch={useDispatch} />,\n      <VoteHistory game={this.props.game} />,\n      <PlayerList />,\n    ];\n\n    return (\n      <div id=\"Tabs\" className=\"tab\">\n        <div className=\"tab-row\">\n          <this.Tab text=\"ALL CHAT\" no={0} />\n          <this.Tab text=\"GAME CHAT\" no={1} />\n          <this.Tab text=\"NOTES\" no={2} />\n          <this.Tab text=\"VOTES\" no={3} />\n          <this.Tab text=\"PLAYERS\" no={4} />\n        </div>\n        {routes[this.state.tab]}\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","// External\n\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n// Styles\n\nimport \"../../styles/Utils/SettingsMenu.scss\";\n\n// Declaration\n\ninterface GameFormProps {\n  onExit: (...args: any[]) => void;\n}\n\ninterface GameFormState {\n  playerMax: number;\n  roleSettings: {\n    merlin: boolean;\n    percival: boolean;\n    morgana: boolean;\n    assassin: boolean;\n    oberon: boolean;\n    mordred: boolean;\n    card: boolean;\n  };\n}\n\nclass GameForm extends Component<GameFormProps, GameFormState> {\n  constructor(props: GameFormProps) {\n    super(props);\n    this.state = {\n      playerMax: 6,\n      roleSettings: {\n        merlin: true,\n        percival: true,\n        morgana: true,\n        assassin: true,\n        oberon: false,\n        mordred: false,\n        card: false,\n      },\n    };\n  }\n\n  render() {\n    const roleArr = [];\n    const cardArr = [];\n\n    if (this.state.roleSettings.merlin) roleArr.push(\"Merlin\");\n    if (this.state.roleSettings.percival) roleArr.push(\"Percival\");\n    if (this.state.roleSettings.morgana) roleArr.push(\"Morgana\");\n    if (this.state.roleSettings.assassin) roleArr.push(\"Assassin\");\n    if (this.state.roleSettings.oberon) roleArr.push(\"Oberon\");\n    if (this.state.roleSettings.mordred) roleArr.push(\"Mordred\");\n    if (this.state.roleSettings.card) cardArr.push(\"Lady of the Lake\");\n\n    return (\n      <div className=\"settings-form\">\n        <form autoComplete=\"off\">\n          <p className=\"title\">GAME INFO</p>\n          <p className=\"subtitle\">Player Max</p>\n          <div className=\"input-container\">\n            <p className=\"handle\">{this.state.playerMax}</p>{\" \"}\n          </div>\n          <p className=\"subtitle\">Roles</p>\n          <div className=\"input-container\">\n            <p className=\"handle\">{roleArr.toString().replace(/,/g, \", \")}</p>{\" \"}\n          </div>\n          <p className=\"subtitle\">Cards</p>\n          <div className=\"input-container\">\n            <p className=\"handle\">{cardArr.toString().replace(/,/g, \", \")}</p>{\" \"}\n          </div>\n          <div className=\"buttons\">\n            <button\n              className=\"bt-cancel\"\n              type=\"button\"\n              onClick={this.props.onExit}\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default GameForm;\n","// External\n\nimport React, { Component, createRef } from \"react\";\n\n// Internal\n\nimport socket from \"../../socket-io/socket-io\";\nimport GameInfo from \"../Lobby/GameInfo\";\nimport GameForm from \"../Lobby/GameForm\";\nimport GameState from \"./GameState\";\nimport Button from \"../../components/utils/Button\";\n\n// Declaration\n\ninterface Message {\n  loading: boolean;\n  text: string;\n  showButtonOne: boolean;\n  showButtonTwo: boolean;\n  showButtonThree: boolean;\n  buttonOne: {\n    type: \"button\";\n    text: string;\n    onClick: ((...args: any[]) => void) | undefined;\n    className: string;\n  };\n  buttonTwo: {\n    type: \"button\";\n    text: string;\n    onClick: ((...args: any[]) => void) | undefined;\n    className: string;\n  };\n  buttonThree: {\n    type: \"button\";\n    text: string;\n    onClick: ((...args: any[]) => void) | undefined;\n    className: string;\n  };\n}\n\ninterface StatusBarProps extends GameState {\n  selected: number[];\n}\n\ninterface StatusBarState {\n  showForm: boolean;\n}\n\nclass StatusBar extends Component<StatusBarProps, StatusBarState> {\n  formRef = createRef<GameForm>();\n\n  constructor(props: StatusBarProps) {\n    super(props);\n    this.state = {\n      showForm: false,\n    };\n    this.formSetup = this.formSetup.bind(this);\n    this.sitAndStand = this.sitAndStand.bind(this);\n    this.startGame = this.startGame.bind(this);\n    this.pickTeam = this.pickTeam.bind(this);\n    this.voteForMission = this.voteForMission.bind(this);\n    this.voteForSuccess = this.voteForSuccess.bind(this);\n    this.shootPlayer = this.shootPlayer.bind(this);\n    this.cardPlayer = this.cardPlayer.bind(this);\n  }\n\n  formSetup() {\n    this.setState({ showForm: true }, () => {\n      this.formRef.current!.setState({\n        roleSettings: this.props.roleSettings,\n        playerMax: this.props.playerMax,\n      });\n    });\n  }\n\n  sitAndStand() {\n    socket.emit(\"joinLeaveGame\", {\n      roomNumber: this.props.code,\n      canSit: true,\n    });\n  }\n\n  startGame() {\n    if (this.props.players.length < 5) return;\n    socket.emit(\"startGame\", {\n      roomNumber: this.props.code,\n    });\n  }\n\n  pickTeam() {\n    if (this.props.picks.length !== this.props.selected.length) return;\n    socket.emit(\"pickTeam\", {\n      roomNumber: this.props.code,\n      team: this.props.selected,\n    });\n  }\n\n  voteForMission(vote: number) {\n    if (this.props.seat > -1 && this.props.votesRound[this.props.seat] < 0) {\n      socket.emit(\"voteForMission\", {\n        roomNumber: this.props.code,\n        vote: vote,\n      });\n    }\n  }\n\n  voteForSuccess(vote: number) {\n    if (this.props.seat > -1 && this.props.voted.includes(this.props.seat)) {\n      socket.emit(\"voteForSuccess\", {\n        roomNumber: this.props.code,\n        vote: vote,\n      });\n    }\n  }\n\n  shootPlayer() {\n    const shot = this.props.selected[0];\n\n    if (\n      this.props.seat > -1 &&\n      this.props.assassin &&\n      this.props.selected.length === 1 &&\n      ![\"Spy?\", \"Assassin\"].includes(this.props.privateKnowledge[shot])\n    ) {\n      socket.emit(\"shootPlayer\", {\n        roomNumber: this.props.code,\n        shot,\n      });\n    }\n  }\n\n  cardPlayer() {\n    const carded = this.props.selected[0];\n\n    if (\n      this.props.seat > -1 &&\n      this.props.seat === this.props.card &&\n      this.props.seat === carded\n    ) {\n      socket.emit(\"cardPlayer\", {\n        roomNumber: this.props.code,\n        carded,\n      });\n    }\n  }\n\n  onWaiting(message: Message) {\n    message.loading = false;\n\n    if (this.props.seat === 0) {\n      message.showButtonThree = true;\n      message.text = \"Modify settings or start the game.\";\n      message.buttonOne.text = \"SETTINGS\";\n      message.buttonOne.className = \"neutral\";\n      message.buttonOne.onClick = this.formSetup;\n      message.buttonTwo.text = \"START\";\n      message.buttonTwo.className =\n        this.props.players.length < 5 ? \"disabled\" : \"confirm\";\n      message.buttonTwo.onClick = this.startGame;\n      message.buttonThree.text = \"STAND UP\";\n      message.buttonThree.className = \"cancel\";\n      message.buttonThree.onClick = this.sitAndStand;\n    } else {\n      const host = this.props.players[0];\n      message.text = \"Waiting for \" + host + \" to start the game.\";\n      message.buttonOne.text = \"INFO\";\n      message.buttonOne.className = \"neutral\";\n      message.buttonOne.onClick = this.formSetup;\n      message.buttonTwo.text = this.props.seat > -1 ? \"STAND UP\" : \"SIT\";\n      message.buttonTwo.className = this.props.seat > -1 ? \"cancel\" : \"confirm\";\n      message.buttonTwo.onClick = this.sitAndStand;\n    }\n\n    return message;\n  }\n\n  onPicking(message: Message) {\n    message.loading = false;\n\n    if (this.props.leader === this.props.seat) {\n      const n = this.props.picks.length;\n      message.showButtonTwo = false;\n      message.text =\n        \"It's your turn to select a team. Choose \" + n + \" players.\";\n      message.buttonOne.text = \"CONFIRM\";\n      message.buttonOne.className =\n        this.props.picks.length !== this.props.selected.length\n          ? \"disabled\"\n          : \"confirm\";\n      message.buttonOne.onClick = this.pickTeam;\n    } else {\n      const leader = this.props.players[this.props.leader];\n      message.showButtonOne = false;\n      message.showButtonTwo = false;\n      message.text = \"Waiting for \" + leader + \" to select a team.\";\n    }\n\n    return message;\n  }\n\n  onVoting(message: Message) {\n    message.loading = false;\n\n    if (this.props.seat > -1 && this.props.votesRound[this.props.seat] < 0) {\n      const leader = this.props.players[this.props.leader];\n      const team = this.props.players\n        .filter((p, i) => this.props.picks.includes(i))\n        .toString();\n      message.text =\n        \"Its your turn to vote. \" +\n        leader +\n        \" has selected: \" +\n        team.replace(/,/g, \", \");\n      message.buttonOne.text = \"APPROVE\";\n      message.buttonOne.className = \"confirm\";\n      message.buttonOne.onClick = () => this.voteForMission(1);\n      message.buttonTwo.text = \"REJECT\";\n      message.buttonTwo.className = \"cancel\";\n      message.buttonTwo.onClick = () => this.voteForMission(0);\n    } else {\n      const remaining = this.props.players\n        .filter((p, i) => this.props.votesRound[i] < 0)\n        .toString();\n      message.showButtonOne = false;\n      message.showButtonTwo = false;\n      message.text =\n        \"Waiting for \" + remaining.replace(/,/g, \", \") + \" to vote.\";\n    }\n\n    return message;\n  }\n\n  onMission(message: Message) {\n    message.loading = false;\n\n    if (this.props.seat > -1 && this.props.voted.includes(this.props.seat)) {\n      message.text = \"Its your turn to vote. Choose the fate of this mission.\";\n      message.buttonOne.text = \"SUCCEED\";\n      message.buttonOne.className = \"confirm\";\n      message.buttonOne.onClick = () => this.voteForSuccess(1);\n      message.buttonTwo.text = \"FAIL\";\n      message.buttonTwo.className = \"cancel\";\n      message.buttonTwo.onClick = () => this.voteForSuccess(0);\n    } else {\n      const remaining = this.props.players\n        .filter((p, i) => this.props.voted.includes(i))\n        .toString();\n      message.showButtonOne = false;\n      message.showButtonTwo = false;\n      message.text =\n        \"Waiting for \" + remaining.replace(/,/g, \", \") + \" to vote.\";\n    }\n\n    return message;\n  }\n\n  onCarding(message: Message) {\n    message.loading = false;\n\n    if (this.props.seat > -1 && this.props.seat === this.props.card) {\n      message.showButtonTwo = false;\n      message.text =\n        \"You have Lady of the Lake. Select a player to reveal their role.\";\n      message.buttonOne.text = \"CONFIRM\";\n      message.buttonOne.className =\n        this.props.selected.length !== 1 ? \"disabled\" : \"confirm\";\n      message.buttonOne.onClick = this.cardPlayer;\n    } else {\n      const remaining = this.props.players[this.props.card];\n      message.showButtonOne = false;\n      message.showButtonTwo = false;\n      message.text = \"Waiting for \" + remaining + \" to use lady of the lake.\";\n    }\n\n    return message;\n  }\n\n  onAssassination(message: Message) {\n    message.loading = false;\n\n    if (this.props.seat > -1 && this.props.assassin) {\n      message.showButtonTwo = false;\n      message.text = \"Is your turn to kill Merlin! Choose a target.\";\n      message.buttonOne.text = \"CONFIRM\";\n      message.buttonOne.className =\n        this.props.selected.length !== 1 ? \"disabled\" : \"confirm\";\n      message.buttonOne.onClick = this.shootPlayer;\n    } else {\n      message.showButtonOne = false;\n      message.showButtonTwo = false;\n      message.text = \"Waiting for assassin to select a target.\";\n    }\n\n    return message;\n  }\n\n  inProgress(message: Message) {\n    switch (this.props.stage) {\n      case \"PICKING\":\n        return this.onPicking(message);\n      case \"VOTING\":\n        return this.onVoting(message);\n      case \"MISSION\":\n        return this.onMission(message);\n      case \"CARDING\":\n        return this.onCarding(message);\n      case \"ASSASSINATION\":\n        return this.onAssassination(message);\n      default:\n        return message;\n    }\n  }\n\n  onFinish(message: Message) {\n    message.loading = false;\n    message.showButtonOne = false;\n    message.showButtonTwo = false;\n    message.text = [\n      \"Merlin has been killed! The Spies Win.\",\n      \"Merlin was not killed! The Resistance wins.\",\n      \"Three missions have failed! The Spies Win.\",\n      \"Mission hammer was rejected! The Spies Win.\",\n      \"Three missions have succeeded! The Resistance wins.\",\n    ][this.props.cause ? this.props.cause : 0];\n\n    return message;\n  }\n\n  onFreeze(message: Message) {\n    message.loading = false;\n    message.showButtonOne = false;\n    message.showButtonTwo = false;\n\n    if (this.props.ended === false) {\n      message.text = \"The game has been paused by a moderator.\";\n    } else if (this.props.ended === true) {\n      message.text = \"The game has been frozen by a moderator.\";\n    }\n\n    return message;\n  }\n\n  render() {\n    let message: Message = {\n      loading: true,\n      text: \"\",\n      showButtonOne: true,\n      showButtonTwo: true,\n      showButtonThree: false,\n      buttonOne: {\n        type: \"button\",\n        text: \"\",\n        onClick: () => {},\n        className: \"\",\n      },\n      buttonTwo: {\n        type: \"button\",\n        text: \"\",\n        onClick: () => {},\n        className: \"\",\n      },\n      buttonThree: {\n        type: \"button\",\n        text: \"\",\n        onClick: () => {},\n        className: \"\",\n      },\n    };\n\n    if (this.props.started === false) {\n      message = this.onWaiting(message);\n    } else if (this.props.frozen === false) {\n      if (this.props.ended === false) {\n        message = this.inProgress(message);\n      } else if (this.props.ended === true) {\n        message = this.onFinish(message);\n      }\n    } else if (this.props.frozen === true) {\n      message = this.onFreeze(message);\n    }\n\n    return message.loading ? null : (\n      <>\n        <p className=\"message\">{message.text}</p>{\" \"}\n        {message.showButtonOne ? (\n          <div className=\"button-cont\">\n            {\" \"}\n            <Button {...message.buttonOne} />{\" \"}\n          </div>\n        ) : null}\n        {message.showButtonTwo ? (\n          <div className=\"button-cont\">\n            <Button {...message.buttonTwo} />{\" \"}\n          </div>\n        ) : null}\n        {message.showButtonThree ? (\n          <div className=\"button-cont\">\n            {\" \"}\n            <Button {...message.buttonThree} />{\" \"}\n          </div>\n        ) : null}\n        {this.state.showForm ? (\n          this.props.seat === 0 ? (\n            <GameForm\n              ref={this.formRef}\n              title=\"MODIFY GAME SETTINGS\"\n              onExit={() => this.setState({ showForm: false })}\n              createsGame={false}\n              roomToModify={this.props.code}\n            />\n          ) : (\n            <GameInfo\n              ref={this.formRef}\n              onExit={() => this.setState({ showForm: false })}\n            />\n          )\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default StatusBar;\n","// Import External Components\n\nimport React, { Component, createRef } from 'react'\nimport {\n  faStamp,\n  faPen,\n  faPaintBrush,\n  faCheck,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { SketchPicker, ColorResult, RGBColor } from 'react-color'\n\n// Import Internal Components\n\nimport Table from './Table'\n\n// Import Styles\n\nimport '../../styles/Game/AvatarUI.scss'\n\n// Class Definition\n\ninterface AvatarUIProps {\n  spyUrl: string\n  resUrl: string\n  username: string\n  onMission: boolean\n  leader: boolean\n  isRes: boolean\n  isPickable: boolean\n  role: string\n  vote: number\n  table: Table\n}\n\nclass AvatarUI extends Component<\n  AvatarUIProps,\n  {\n    shieldPosition: [number, number]\n    shieldScale: number\n    shieldShow: boolean\n    avatarInitialPosition: [number, number]\n    avatarPosition: [number, number]\n    avatarShow: boolean\n    avatarSize: number\n    currentBackground: number\n    currentHighlight: RGBColor\n    renderPicker: boolean\n    renderButtons: boolean\n    picked: boolean\n    width: number\n  }\n> {\n  background = ['none', 'res', 'spy']\n  shieldLocation = createRef<HTMLDivElement>()\n\n  constructor(props: AvatarUIProps) {\n    super(props)\n    this.state = {\n      shieldPosition: [0, 0],\n      shieldShow: false,\n      shieldScale: 1,\n      avatarInitialPosition: [0, 0],\n      avatarPosition: [0, 0],\n      avatarShow: false,\n      avatarSize: 350,\n      currentBackground: 0,\n      currentHighlight: {\n        r: 255,\n        g: 204,\n        b: 0,\n        a: 100,\n      },\n      renderPicker: false,\n      renderButtons: false,\n      picked: false,\n      width: 0,\n    }\n    this.handleHighlight = this.handleHighlight.bind(this)\n  }\n\n  componentDidUpdate(prevProps: AvatarUIProps) {\n    if (prevProps.isPickable !== this.props.isPickable) {\n      this.setState({\n        picked: false\n      })\n    }\n  }\n\n  handleHighlight(color: ColorResult) {\n    this.setState({ currentHighlight: color.rgb })\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          id=\"Avatar-UI\"\n          style={{\n            top: this.state.avatarPosition[0] + 'px',\n            left: this.state.avatarPosition[1] + 'px',\n            display: this.state.avatarShow ? undefined : 'none',\n          }}\n          onMouseOver={() => this.setState({ renderButtons: true })}\n          onMouseLeave={() => this.setState({ renderButtons: false })}\n        >\n          <div\n            id=\"ave-graphics\"\n            style={{\n              width: this.state.avatarSize + 'px',\n              height: this.state.avatarSize + 'px',\n              maxHeight: Math.max(this.state.width * 0.06, 45) + 'px',\n              maxWidth: Math.max(this.state.width * 0.06, 45) + 'px',\n            }}\n          >\n            <div\n              id=\"ave-background\"\n              className={\n                this.background[this.state.currentBackground] +\n                ' ' +\n                (this.state.picked && this.props.isPickable ? 'picked' : '')\n              }\n            />\n            <div\n              className={\n                (this.props.isRes ? 'ave-res' : 'ave-spy') +\n                ' tooltip ' +\n                (this.props.isPickable ? 'pickable' : 'not-pickable')\n              }\n              style={{\n                backgroundImage:\n                  'url(' +\n                  (this.props.isRes ? this.props.resUrl : this.props.spyUrl) +\n                  ')',\n              }}\n              onClick={() => \n                this.setState({\n                  picked: this.props.isPickable && !this.state.picked,\n                }, this.props.table.countSelected)\n              }\n            >\n              {this.props.isPickable ? (\n                <span className=\"tooltip-text\">\n                  Click on this player to pick them\n                </span>\n              ) : null}\n            </div>\n            {this.props.onMission ? (\n              <div className=\"ave-shield\" ref={this.shieldLocation}>\n                {this.state.shieldShow ? (\n                  <div\n                    style={{\n                      transform: 'scale(' + this.state.shieldScale + ')',\n                      top: this.state.shieldPosition[0] + 'px',\n                      left: this.state.shieldPosition[1] + 'px',\n                    }}\n                    className=\"ave-shield-display\"\n                  />\n                ) : null}\n              </div>\n            ) : null}\n            {this.props.leader ? <div className=\"ave-flag\" /> : null}\n            {this.props.vote > -1 ? (\n              <div className={'ave-vote-bubble ' + (this.props.vote === 1)} />\n            ) : null}\n            {this.state.renderButtons ? (\n              <div className=\"ave-buttons\">\n                <button\n                  onClick={() =>\n                    this.setState({\n                      currentBackground: (this.state.currentBackground + 1) % 3,\n                    })\n                  }\n                  className=\"tooltip\"\n                >\n                  <span className=\"tooltip-text\">\n                    Mark this player's allegiance\n                  </span>\n                  <FontAwesomeIcon icon={faStamp} />\n                </button>\n                <button className=\"tooltip\">\n                  <span className=\"tooltip-text\">\n                    Highlight this player's chat messages\n                  </span>\n                  <FontAwesomeIcon icon={faPen} />\n                </button>\n                <button\n                  onClick={() =>\n                    this.setState({\n                      renderPicker: !this.state.renderPicker,\n                    })\n                  }\n                  className=\"tooltip\"\n                >\n                  <span className=\"tooltip-text\">\n                    Change this player's highlight color\n                  </span>\n                  <FontAwesomeIcon icon={faPaintBrush} />\n                </button>\n              </div>\n            ) : null}\n          </div>\n          <p\n            className=\"ave-username\"\n            style={{\n              width: Math.max(this.state.width * 0.15, 40) + 'px',\n              fontSize: Math.max(this.state.width * 0.01, 10) + 'px',\n            }}\n          >\n            {this.props.username}\n          </p>\n          <p\n            className={'ave-role ' + this.props.isRes}\n            style={{\n              opacity:\n                this.props.role !== 'Spy?' && this.props.role !== 'Resistance?'\n                  ? '1'\n                  : '0',\n              fontSize: Math.max(this.state.width * 0.008, 8) + 'px',\n            }}\n          >\n            {this.props.role}\n          </p>\n        </div>\n        {this.state.renderPicker ? (\n          <div className=\"hl-picker\">\n            <div className=\"hl-stuff\">\n              <p>CHANGE HIGHLIGHT COLOR</p>\n              <SketchPicker\n                color={this.state.currentHighlight}\n                onChange={this.handleHighlight}\n              />\n              <button\n                onClick={() =>\n                  this.setState({\n                    renderPicker: !this.state.renderPicker,\n                  })\n                }\n              >\n                <FontAwesomeIcon icon={faCheck} />\n              </button>\n            </div>\n          </div>\n        ) : null}\n      </>\n    )\n  }\n}\n\nexport default AvatarUI\n","// Import External Components\n\nimport React, { Component, createRef, RefObject } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Import Internal Components\n\nimport StatusBar from \"./StatusBar\";\nimport GameState from \"./GameState\";\nimport AvatarUI from \"./AvatarUI\";\nimport Button from \"../../components/utils/Button\";\n\n// Import Styles\n\nimport \"../../styles/Game/Table.scss\";\n\n// Class Definition\n\ninterface AvatarUIProps {\n  spyUrl: string;\n  resUrl: string;\n  username: string;\n  onMission: boolean;\n  leader: boolean;\n  isRes: boolean;\n  isPickable: boolean;\n  role: string;\n  vote: number;\n  table: Table;\n}\n\nclass MissionTracker extends Component<\n  { count: number; results: boolean[]; round: number },\n  {}\n> {\n  render() {\n    const playerMatrix = [\n      [\"2\", \"3\", \"2\", \"3\", \"3\"],\n      [\"2\", \"3\", \"4\", \"3\", \"4\"],\n      [\"2\", \"3\", \"3\", \"4*\", \"4\"],\n      [\"3\", \"4\", \"4\", \"5*\", \"5\"],\n      [\"3\", \"4\", \"4\", \"5*\", \"5\"],\n      [\"3\", \"4\", \"4\", \"5*\", \"5\"],\n    ];\n\n    const results: (boolean | undefined)[] = [\n      this.props.results[0],\n      this.props.results[1],\n      this.props.results[2],\n      this.props.results[3],\n      this.props.results[4],\n    ];\n\n    const rounds: boolean[] = new Array(5)\n      .fill(false)\n      .fill(true, 0, this.props.round + 1);\n\n    return (\n      <div className=\"mission-tracker\">\n        <div className=\"mission-container\">\n          {results.map((r, i) => (\n            <div className={\"mission \" + r} key={\"mission\" + i}>\n              <p>{playerMatrix[this.props.count][i]}</p>{\" \"}\n            </div>\n          ))}\n        </div>\n        <div className=\"rounds-container\">\n          {rounds.map((r, i) => (\n            <div className={\"round \" + r} key={\"round\" + i} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\ninterface TableProps {\n  game: GameState;\n}\n\nclass Table extends Component<\n  TableProps,\n  {\n    left: AvatarUIProps[];\n    right: AvatarUIProps[];\n    top: AvatarUIProps[];\n    bot: AvatarUIProps[];\n    width: number;\n    redirect: boolean;\n    selected: number[];\n  }\n> {\n  tableRef = createRef<HTMLDivElement>();\n  centerRef = createRef<HTMLDivElement>();\n  seatRef: RefObject<HTMLDivElement>[] = [];\n  avatarRef: RefObject<AvatarUI>[] = [];\n  allTimeouts: ReturnType<typeof setTimeout>[] = [];\n\n  constructor(props: TableProps) {\n    super(props);\n    this.state = {\n      left: [],\n      right: [],\n      top: [],\n      bot: [],\n      width: 0,\n      redirect: false,\n      selected: [],\n    };\n    this.createSeats = this.createSeats.bind(this);\n    this.countSelected = this.countSelected.bind(this);\n    this.resizeTable = this.resizeTable.bind(this);\n    this.initAvatars = this.initAvatars.bind(this);\n    this.moveAvatars = this.moveAvatars.bind(this);\n    this.moveShields = this.moveShields.bind(this);\n    this.leaveLobby = this.leaveLobby.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resizeTable);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeTable);\n    this.allTimeouts.forEach((t) => clearTimeout(t));\n\n    this.leaveLobby();\n  }\n\n  componentDidUpdate(prevProps: TableProps) {\n    if (prevProps !== this.props) {\n      let callback: (...args: any[]) => void = () => {};\n\n      if (\n        prevProps.game.players.length !== this.props.game.players.length ||\n        prevProps.game.started !== this.props.game.started\n      )\n        callback = this.resizeTable;\n      if (prevProps.game.picks.includes(-1) && !this.props.game.picks.includes(-1))\n        callback = this.moveShields;\n\n      this.createSeats(callback);\n    }\n  }\n\n  createSeats(callback: (...args: any[]) => void) {\n    const game = this.props.game;\n\n    const left: AvatarUIProps[] = [];\n    const top: AvatarUIProps[] = [];\n    const right: AvatarUIProps[] = [];\n    const bot: AvatarUIProps[] = [];\n\n    this.seatRef = [];\n    this.avatarRef = [];\n\n    const players = [...game.players];\n\n    for (let i = 0; i < players.length; i++) {\n      this.seatRef[i] = createRef<HTMLDivElement>();\n      this.avatarRef[i] = createRef<AvatarUI>();\n\n      const res = [\n        \"Resistance?\",\n        \"Resistance\",\n        \"Percival\",\n        \"Merlin\",\n        \"Merlin?\",\n      ];\n      const knowledge =\n        game.privateKnowledge.length > 0 && game.ended !== true\n          ? [...game.privateKnowledge]\n          : [...game.publicKnowledge];\n\n      // Pre Conditions\n      const imKilling = game.assassin && game.stage === \"ASSASSINATION\";\n      const imPicking = game.seat === game.leader && game.stage === \"PICKING\";\n      const imCarding = game.seat === game.card && game.stage === \"CARDING\";\n      const imVoting = game.stage === \"VOTING\";\n\n      // Avatars\n      const spyUrl =\n        \"https://cdn.discordapp.com/attachments/612734001916018707/736446594936733786/base-spy.png\";\n      const resUrl =\n        \"https://cdn.discordapp.com/attachments/688596182758326313/732067339746541628/base-res.png\";\n\n      // Data\n      const username = players[i];\n      const role = knowledge[i];\n      const vote = imVoting ? -1 : game.votesRound[i];\n      const leader = game.leader === i || (game.started === false && i === 0);\n      const isRes = res.includes(knowledge[i]);\n      const isPickable = imPicking || imKilling || imCarding;\n      const onMission = game.picks.includes(i);\n\n      const e: AvatarUIProps = {\n        spyUrl,\n        resUrl,\n        username,\n        role,\n        vote,\n        leader,\n        isRes,\n        isPickable,\n        onMission,\n        table: this,\n      };\n\n      const l = Math.floor(players.length / 2);\n      if (players.length < 4) {\n        switch (i) {\n          case 0:\n            top.push(e);\n            break;\n          default:\n            bot.push(e);\n            break;\n        }\n      } else {\n        switch (i) {\n          case 0:\n            left.push(e);\n            break;\n          case l:\n            right.push(e);\n            break;\n          default:\n            i < l ? top.push(e) : bot.push(e);\n            break;\n        }\n      }\n    }\n\n    this.setState(\n      {\n        left,\n        top,\n        right,\n        bot,\n      },\n      callback\n    );\n  }\n\n  countSelected() {\n    const selected: number[] = [];\n\n    this.avatarRef.forEach((avatar, i) => {\n      const a = avatar.current!;\n      if (a.state.picked) selected.push(i);\n    });\n\n    this.setState({ selected });\n  }\n\n  resizeTable() {\n    const rect = this.tableRef.current!.getBoundingClientRect();\n\n    this.setState({ width: Math.min(rect.height * 4.5, rect.width) });\n    this.initAvatars();\n  }\n\n  initAvatars() {\n    this.allTimeouts.forEach((t) => clearTimeout(t));\n\n    const init = () => {\n      this.moveAvatars();\n      this.allTimeouts.push(setTimeout(this.moveShields, 550));\n    };\n\n    this.allTimeouts.push(setTimeout(init, 50));\n  }\n\n  moveAvatars() {\n    this.avatarRef.forEach((avatar, i) => {\n      const a = avatar.current!;\n      const rect_b = this.seatRef[i].current!.getBoundingClientRect();\n      a.setState({\n        width: this.state.width,\n        avatarShow: false,\n        avatarInitialPosition: [rect_b.height / 2, rect_b.width / 2],\n      });\n    });\n\n    const start = 50;\n\n    this.allTimeouts.push(\n      setTimeout(\n        () =>\n          this.avatarRef.forEach((avatar, i) => {\n            const a = avatar.current!;\n            const rect_a = this.centerRef.current!.getBoundingClientRect();\n            const rect_b = this.seatRef[i].current!.getBoundingClientRect();\n            a.setState({\n              avatarShow: true,\n              avatarPosition: [\n                rect_a.top - rect_b.top,\n                rect_a.left - rect_b.left,\n              ],\n            });\n          }),\n        10\n      ),\n      setTimeout(\n        () =>\n          this.avatarRef.forEach((avatar, i) => {\n            const a = avatar.current!;\n            a.setState({\n              avatarPosition: a.state.avatarInitialPosition,\n            });\n          }),\n        start\n      )\n    );\n  }\n\n  moveShields() {\n    this.avatarRef.forEach((avatar, i) => {\n      const a = avatar.current!;\n      if (!a.props.onMission) return;\n      a.setState({\n        shieldShow: false,\n      });\n    });\n\n    const start = 200;\n\n    this.allTimeouts.push(\n      setTimeout(\n        () =>\n          this.avatarRef.forEach((avatar, i) => {\n            const a = avatar.current!;\n            if (!a.props.onMission) return;\n            const rect_a = this.centerRef.current!.getBoundingClientRect();\n            const rect_b = a.shieldLocation.current!.getBoundingClientRect();\n            a.setState({\n              shieldShow: true,\n              shieldPosition: [\n                rect_a.top - rect_b.top,\n                rect_a.left - rect_b.left,\n              ],\n            });\n          }),\n        10\n      ),\n      setTimeout(\n        () =>\n          this.avatarRef.forEach((avatar, i) => {\n            const a = avatar.current!;\n            if (!a.props.onMission) return;\n            a.setState({\n              shieldPosition: [0, 0],\n            });\n          }),\n        start\n      ),\n      setTimeout(\n        () =>\n          this.avatarRef.forEach((avatar, i) => {\n            const a = avatar.current!;\n            if (!a.props.onMission) return;\n            a.setState({\n              shieldScale: 1.2,\n            });\n          }),\n        start + 700\n      ),\n      setTimeout(\n        () =>\n          this.avatarRef.forEach((avatar, i) => {\n            const a = avatar.current!;\n            if (!a.props.onMission) return;\n            a.setState({\n              shieldScale: 1,\n            });\n          }),\n        start + 950\n      )\n    );\n  }\n\n  leaveLobby() {\n    return false;\n  }\n\n  render() {\n    const game = this.props.game;\n    const topO = this.state.left.length;\n    const rightO = this.state.top.length + topO;\n    const botO = this.state.right.length + rightO;\n\n    const renderAvatar = (avatar: AvatarUIProps, i: number, origin: number) => (\n      <div\n        className=\"table-seat\"\n        ref={this.seatRef[i + origin]}\n        key={\"Seat\" + i}\n      >\n        <AvatarUI {...avatar} ref={this.avatarRef[i + origin]} />\n      </div>\n    );\n\n    return (\n      <div id=\"Table\" className=\"tab\">\n        <div className=\"table-row table-buttons\">\n          {this.state.redirect ? <Redirect to=\"/lobby\" /> : null}\n          <Button\n            type=\"button\"\n            text=\"Exit\"\n            onClick={() => {\n              this.setState({\n                redirect: true,\n              });\n            }}\n            className=\"\"\n          />\n          <Button type=\"button\" text=\"Claim\" onClick={undefined} className=\"\" />\n        </div>\n        <div\n          className=\"table-row table-display\"\n          ref={this.tableRef}\n          style={{ width: \"95%\" }}\n        >\n          <div className=\"table-column\">\n            <div className=\"table-prow\">\n              {this.state.left.map((a, i) => renderAvatar(a, i, 0))}\n            </div>\n          </div>\n          <div className=\"table-column\">\n            <div className=\"table-prow\">\n              {this.state.top.map((a, i) => renderAvatar(a, i, topO))}\n            </div>\n            <div className=\"table-prow\">\n              <div className=\"table-center\" ref={this.centerRef}>\n                {game.started ? (\n                  <MissionTracker\n                    count={Math.max(game.players.length - 5, 0)}\n                    results={game.results}\n                    round={game.round}\n                  />\n                ) : null}\n              </div>\n            </div>\n            <div className=\"table-prow\">\n              {this.state.bot.map((a, i) => renderAvatar(a, i, botO)).reverse()}\n            </div>\n          </div>\n          <div className=\"table-column\">\n            <div className=\"table-prow\">\n              {this.state.right.map((a, i) => renderAvatar(a, i, rightO))}\n            </div>\n          </div>\n        </div>\n        <div className=\"table-row table-info\">\n          <StatusBar {...game} selected={this.state.selected} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","// External\n\nimport React, { Component, createRef } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\n// Internal\n\n// import GameForm from './Lobby/GameForm'\n\nimport socket from \"../socket-io/socket-io\";\nimport AvalonScrollbars from \"../components/utils/AvalonScrollbars\";\n\nimport Navbar from \"./Navbar\";\nimport Tabs from \"./Game/Tabs\";\nimport Table from \"./Game/Table\";\nimport GameState from \"./Game/GameState\";\n\n// Styles\n\nimport \"../styles/Game.scss\";\n\n// Declaration\n\ninterface GameProps {\n  id: string;\n}\n\nclass Game extends Component<RouteComponentProps<GameProps>, GameState> {\n  initialHeight = Math.max(window.innerHeight, 540);\n  resizeCount = 1;\n  tableRef = createRef<Table>();\n\n  constructor(props: RouteComponentProps<GameProps>) {\n    super(props);\n    this.state = {\n      // Player Info\n      username: \"Oken\",\n      players: [],\n      seat: -1,\n      // Game State Info\n      started: undefined,\n      ended: undefined,\n      frozen: undefined,\n      stage: undefined,\n      cause: undefined,\n      // Game UI Info\n      tabs: 2,\n      scale: 1,\n      // Game Pick Info\n      picks: [],\n      votesRound: [],\n      voted: [],\n      // Game Knowledge\n      publicKnowledge: [],\n      privateKnowledge: [],\n      // Game Power Positions\n      leader: -1,\n      card: -1,\n      assassin: false,\n      // Game Mission Info\n      mission: -1,\n      round: -1,\n      // Past Game Info\n      results: [],\n      missionVotes: [[], [], [], [], []],\n      missionTeams: [[], [], [], [], []],\n      missionLeader: [],\n      // Room Number\n      code: -1,\n      // Game Settings\n      playerMax: 0,\n      roleSettings: {\n        merlin: false,\n        percival: false,\n        morgana: false,\n        assassin: false,\n        oberon: false,\n        mordred: false,\n        card: false,\n      },\n    };\n    this.triggerRequest = this.triggerRequest.bind(this);\n    this.parseGame = this.parseGame.bind(this);\n    this.setTableHeight = this.setTableHeight.bind(this);\n  }\n\n  componentDidMount() {\n    socket.on(\"gameUpdate\", this.triggerRequest);\n    socket.on(\"gameResponse\", this.parseGame);\n\n    socket.emit(\"roomJoin\", {\n      roomNumber: this.props.match.params.id,\n    });\n  }\n\n  componentWillUnmount() {\n    socket.off(\"gameUpdate\", this.triggerRequest);\n    socket.off(\"gameResponse\", this.parseGame);\n\n    socket.emit(\"joinLeaveGame\", {\n      roomNumber: this.state.code,\n      canSit: false,\n    });\n\n    socket.emit(\"roomLeave\", {\n      roomNumber: this.props.match.params.id,\n    });\n  }\n\n  triggerRequest() {\n    socket.emit(\"gameRequest\", {\n      roomNumber: this.props.match.params.id,\n    });\n  }\n\n  parseGame(data: GameState) {\n    data.tabs = this.state.tabs;\n    data.scale = this.state.scale;\n\n    this.setState(data, () => {\n      if (this.resizeCount) this.tableRef.current!.resizeTable();\n      this.resizeCount = 0;\n    });\n  }\n\n  setTableHeight() {\n    this.setState({\n      scale: (this.state.scale + 0.1) % 1.1,\n    });\n\n    this.tableRef.current!.resizeTable();\n  }\n\n  render() {\n    const tabs = [];\n\n    for (let i = 0; i < this.state.tabs; i++) {\n      tabs.push(<Tabs key={\"Tab\" + i} game={this.state} />);\n    }\n\n    return (\n      <div id=\"Background-2\" className=\"dark full\">\n        <Navbar username=\"\" />\n        <AvalonScrollbars>\n          <div\n            id=\"Game\"\n            style={{ minHeight: this.initialHeight + \"px\" }}\n            className=\"section\"\n          >\n            <div\n              className=\"column section\"\n              style={{ flex: \"0 0 \" + (40 + this.state.scale * 20) + \"%\" }}\n            >\n              <Table ref={this.tableRef} game={this.state} />\n            </div>\n            <div className=\"column section\">{tabs}</div>\n          </div>\n        </AvalonScrollbars>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n\n// <GameForm title=\"\" onExit={() => {}}/>\n","// Import External Components\n\nimport React, { Component } from 'react'\n\n// Import Styles\n\nimport '../styles/Globals.scss'\n\n// Class Definition\n\nclass NoMatch extends Component {\n\trender() {\n\t\treturn <p>404. Page not found.</p>\n\t}\n}\n\nexport default NoMatch\n","// External\n\nimport React, { Component } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\n// Routes\n\nimport Parse from './parse/parse';\nimport socket from './socket-io/socket-io';\nimport LoggedInOnly from './components/routes/LoggedInOnly';\nimport LoggedOutOnly from './components/routes/LoggedOutOnly';\nimport UnverifiedOnly from './components/routes/UnverifiedOnly';\n\n// Redux\n\nimport { setUsername, setOnline } from './redux/actions';\nimport { rootType } from './redux/reducers';\n\n// Pages\n\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Verify from './pages/Verify';\nimport Lobby from './pages/Lobby';\nimport Profile from './pages/Profile';\nimport Game from './pages/Game';\nimport NoMatch from './pages/NoMatch';\n\n// Types\n\ninterface appProps {\n  online: boolean;\n  dispatch: Dispatch;\n}\n\ninterface appState {\n  authenticated: boolean;\n  verified: boolean;\n  loading: boolean;\n  width: number;\n  height: number;\n}\n\nconst initialState: appState = {\n  authenticated: false,\n  verified: false,\n  loading: true,\n  width: 0,\n  height: 0,\n};\n\nconst mapState = (state: rootType) => {\n  const { online } = state;\n  return { online };\n};\n\n// App\n\nclass App extends Component<appProps, appState> {\n  dispatchCount: number = 1;\n\n  constructor(props: appProps) {\n    super(props);\n    this.state = initialState;\n    this.updateState = this.updateState.bind(this);\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  async componentDidMount() {\n    window.addEventListener('resize', this.updateDimensions);\n\n    socket.on('connectionStarted', this.updateState);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n\n    socket.disconnect();\n  }\n\n  componentDidUpdate(prevProps: appProps) {\n    if (prevProps.online !== this.props.online && this.dispatchCount < 1) {\n      this.updateState();\n    }\n\n    this.dispatchCount = 0;\n  }\n\n  updateState() {\n    const currentUser = Parse.User.current();\n\n    if (currentUser) {\n      const username = currentUser.getUsername();\n\n      this.props.dispatch(setUsername(username ? username : '-'));\n      this.props.dispatch(setOnline(true));\n\n      this.setState({\n        authenticated: true,\n        verified: true,\n        loading: false,\n      });\n\n      socket.emit('parseLink', currentUser);\n    } else {\n      this.props.dispatch(setOnline(false));\n\n      this.setState({\n        authenticated: false,\n        verified: false,\n        loading: false,\n      });\n\n      socket.emit('parseUnlink');\n    }\n  }\n\n  updateDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  render() {\n    return this.state.loading === true ? null : (\n      <>\n        <Router>\n          <Switch>\n            <LoggedOutOnly exact path=\"/\" authenticated={this.state.authenticated} component={Login} />\n            <LoggedOutOnly exact path=\"/signup\" authenticated={this.state.authenticated} component={Signup} />\n            <UnverifiedOnly exact path=\"/verify\" authenticated={this.state.authenticated} verified={this.state.verified} component={Verify} />\n            <LoggedInOnly exact path=\"/lobby\" authenticated={this.state.authenticated} verified={this.state.verified} component={Lobby} />\n            <LoggedInOnly path=\"/profile/:username\" authenticated={this.state.authenticated} verified={this.state.verified} component={Profile} />\n            <LoggedInOnly path=\"/game/:id\" authenticated={this.state.authenticated} verified={this.state.verified} component={Game} />\n            <Route component={NoMatch} />\n          </Switch>\n        </Router>\n        <span style={{ display: 'none' }}>\n          Window size: {this.state.width} x {this.state.height}\n        </span>\n      </>\n    );\n  }\n}\n\nexport default connect(mapState, null)(App);\n","// External\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, useDispatch } from 'react-redux';\n\n// Internal\n\nimport App from './App';\nimport store from './redux/store';\n\n// Render\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App online={true} dispatch={useDispatch} />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}